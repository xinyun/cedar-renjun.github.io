<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 教程，Doxygen | Enjoy Programming, Enjoy Life]]></title>
  <link href="http://cedar-renjun.github.io/blog/categories/jiao-cheng-,doxygen/atom.xml" rel="self"/>
  <link href="http://cedar-renjun.github.io/"/>
  <updated>2014-03-23T15:51:27+08:00</updated>
  <id>http://cedar-renjun.github.io/</id>
  <author>
    <name><![CDATA[Cedar]]></name>
    <email><![CDATA[819280802@qq.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Doxygen 10 分钟入门教程]]></title>
    <link href="http://cedar-renjun.github.io/blog/2014/03/21/learn-doxygen-in-10-minutes/"/>
    <updated>2014-03-21T22:02:07+08:00</updated>
    <id>http://cedar-renjun.github.io/blog/2014/03/21/learn-doxygen-in-10-minutes</id>
    <content type="html"><![CDATA[<p>【修订版本，随时更改】</p>

<h2>综述</h2>

<p>本文试图在10分钟内，帮助您了解文档生成工具Doxygen的基本概念，并熟悉Doxygen的使用规则，同时给予深入学习的一些方向性建议。</p>

<p>因为本文仅仅是帮助初学者入门，所以选例方面较为简单，缺乏广度和深度。后期会编写一些深度学习Doxygen的文章，敬请关注</p>

<h2>Doxygen是什么东西？</h2>

<p>Doxygen是一款文档生成工具，它可以从代码中提取出相应的文档，并组织，输出成各种漂亮的文档（如HTML，PDF，RTF等）</p>

<p>有了Doxygen工具，程序员便可以在写代码的时候，直接内嵌文档，再也不需要为某个功能代码单独写文档，从而最大程度的保持了文档和代码的统一性</p>

<p>另外，Doxygen 1.8.x版本中增加对markdown的支持，也支持内嵌部分HTML标签，从而极大的简化了文档编写难度，甚至，您可以用Doxygen生成一个静态的网站。</p>

<p>目前Doxygen支持C/C++，Objective-C, C#，PHP等语言，支持多平台(Mac OS, Linux, Windows)，更多信息，请参考<a href="http://www.stack.nl/~dimitri/doxygen/index.html">Doxygen官方介绍</a></p>

<!-- more -->


<h2>Doxygen适合什么人？</h2>

<p>适合对代码文档有一定要求的程序员</p>

<p><strong>PS：</strong>能看到这里的程序员，一定是位有追求，有理想的工程狮，哈哈，就你了，go on please</p>

<h2>开始学习Doxygen</h2>

<p><strong>注：</strong>在继续阅读之前，请确保您</p>

<ul>
<li>知道如何在windows环境下调出命令窗口</li>
<li>具有简单的编程基础</li>
</ul>


<h3>下载和安装</h3>

<p>doxygen最新版为1.8.6版本，下载链接如下</p>

<pre><code>http://sourceforge.net/projects/doxygen/files/latest/download?source=files
</code></pre>

<p>下载完成后，双击安装，采用默认设置就ok，这里不做过多介绍</p>

<h3>准备源文件</h3>

<p>这里准备了三个简单的C语言源代码</p>

<pre><code>main.c  // 演示如何调用Dev中的设备接口
dev.c   // Dev设备的实现代码
dev.h   // Dev设备的操作接口
</code></pre>

<p>具体代码如下：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (main.c)</span> <a href='/downloads/code/2014/03/21/OriginSourceCode/main.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &quot;dev.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CNT_MAX 10</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">DEV_Example</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">Dev_Init</span><span class="p">();</span>
</span><span class='line'>	
</span><span class='line'>	<span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">CNT_MAX</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>	<span class="p">{</span>
</span><span class='line'>		<span class="n">Dev_PrintInt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>	<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">Dev_Close</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">DEV_Example</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dev.c)</span> <a href='/downloads/code/2014/03/21/OriginSourceCode/dev.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="kt">void</span> <span class="nf">Dev_Init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Dev Initialize OK!</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="nf">Dev_PrintInt</span><span class="p">(</span><span class="kt">int</span> <span class="n">number</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Print IntType number: %d</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">Dev_Close</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Dev Close OK!</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dev.h)</span> <a href='/downloads/code/2014/03/21/OriginSourceCode/dev.h'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="k">extern</span> <span class="kt">void</span> <span class="nf">Dev_Init</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="nf">Dev_PrintInt</span><span class="p">(</span><span class="kt">int</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">void</span> <span class="nf">Dev_Close</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>将这3个源文件放在某个文件夹内，这里以GettingStart文件夹为例，其目录组织结构如下所示</p>

<pre><code>GettingStart
   |-- dev.c
   |-- dev.h
   |-- main.c
</code></pre>

<h3>生成文档</h3>

<p>接下来，我们看看，不编写任何注释的情况下，Doxygen会怎么生成文档</p>

<p>打开命令行(powershell)窗口，并CD到GettingStart目录下，输入下面命令</p>

<pre><code>doxygen -g  
</code></pre>

<p>Powershell的返回信息如下，同时，我们的GettingStart目录下增加了一个名叫Doxyfile的文件(注意第21行)</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='powershell'><span class='line'><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">F</span><span class="err">:</span><span class="p">\</span><span class="n">Doxygen_Demo</span><span class="p">\</span><span class="n">GettingStart</span><span class="p">&gt;</span> <span class="n">doxygen</span> <span class="n">-g</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">Configuration</span> <span class="n">file</span> <span class="p">`</span><span class="n">Doxyfile</span><span class="err">&#39;</span> <span class="n">created</span><span class="p">.&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">Now</span> <span class="n">edit</span> <span class="n">the</span> <span class="n">configuration</span> <span class="n">file</span> <span class="n">and</span> <span class="n">enter</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span>  <span class="n">doxygen</span> <span class="n">Doxyfile</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">to</span> <span class="n">generate</span> <span class="n">the</span> <span class="n">documentation</span> <span class="k">for</span> <span class="n">your</span> <span class="n">project</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">PS</span> <span class="n">F</span><span class="err">:</span><span class="p">\</span><span class="n">Doxygen_Demo</span><span class="p">\</span><span class="n">GettingStart</span><span class="p">&gt;</span> <span class="n">ls</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">pre</span><span class="p">&gt;&lt;</span><span class="n">code</span><span class="p">&gt;</span><span class="n">dir</span><span class="err">:</span> <span class="n">F</span><span class="err">:</span><span class="p">\</span><span class="n">Doxygen_Demo</span><span class="p">\</span><span class="n">GettingStart</span>
</span><span class='line'><span class="p">&lt;/</span><span class="n">code</span><span class="p">&gt;&lt;/</span><span class="n">pre</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">Mode</span>                <span class="n">LastWriteTime</span>     <span class="n">Length</span> <span class="n">Name</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">hr</span> <span class="p">/&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span><span class="n">-a</span><span class="p">&amp;</span><span class="n">mdash</span><span class="err">;</span><span class="p">&amp;</span><span class="n">ndash</span><span class="err">;</span>         <span class="n">2014</span><span class="p">/</span><span class="n">3</span><span class="p">/</span><span class="n">22</span>     <span class="n">15</span><span class="err">:</span><span class="n">44</span>        <span class="n">212</span> <span class="n">dev</span><span class="p">.</span><span class="n">c</span>
</span><span class='line'><span class="n">-a</span><span class="p">&amp;</span><span class="n">mdash</span><span class="err">;</span><span class="p">&amp;</span><span class="n">ndash</span><span class="err">;</span>         <span class="n">2014</span><span class="p">/</span><span class="n">3</span><span class="p">/</span><span class="n">22</span>     <span class="n">16</span><span class="err">:</span><span class="n">14</span>        <span class="n">119</span> <span class="n">dev</span><span class="p">.</span><span class="n">h</span>
</span><span class='line'><span class="n">-a</span><span class="p">&amp;</span><span class="n">mdash</span><span class="err">;</span><span class="p">&amp;</span><span class="n">ndash</span><span class="err">;</span>         <span class="n">2014</span><span class="p">/</span><span class="n">3</span><span class="p">/</span><span class="n">22</span>     <span class="n">16</span><span class="err">:</span><span class="n">46</span>     <span class="n">103431</span> <span class="n">Doxyfile</span>
</span><span class='line'><span class="n">-a</span><span class="p">&amp;</span><span class="n">mdash</span><span class="err">;</span><span class="p">&amp;</span><span class="n">ndash</span><span class="err">;</span>         <span class="n">2014</span><span class="p">/</span><span class="n">3</span><span class="p">/</span><span class="n">22</span>     <span class="n">15</span><span class="err">:</span><span class="n">56</span>        <span class="n">236</span> <span class="n">main</span><span class="p">.</span><span class="n">c</span><span class="p">&lt;/</span><span class="n">p</span><span class="p">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="p">&lt;</span><span class="n">p</span><span class="p">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>这个Doxyfile就是Doxygen工程的配置文件，里面含有一些配置信息</p>

<p>接下来我们做一些修改</p>

<p>在默认情况下，Doxygen会输出HTML和LATEX形式文档，LATEX主要用于生成PDF，这里暂时不需要，所以我们禁用LATEX输出</p>

<p>在Doxyfile中将下面一行</p>

<pre><code>GENERATE_LATEX         = YES
</code></pre>

<p>修改为</p>

<pre><code>GENERATE_LATEX         = NO
</code></pre>

<p>接下来，我们修改HTML的显示方式，将下面两行代码</p>

<pre><code>DISABLE_INDEX          = NO  
GENERATE_TREEVIEW      = NO  
</code></pre>

<p>修改为</p>

<pre><code>DISABLE_INDEX          = YES  
GENERATE_TREEVIEW      = YES  
</code></pre>

<p>至于为什么修改，暂时不用深究，我们后期再讨论</p>

<p>现在我们就可以输出文档了，在命令行（powershell)下输入</p>

<pre><code>doxygen .\Doxyfile
</code></pre>

<p><strong>注：</strong>这个命令称为编译，下文直接用<strong>编译</strong>来代替表示这个指令</p>

<p>这时，Doxygen会从我们的代码中提取相应的文档，并生成HTML文件，进入GettingStart
文件夹内，双击打开HTML文件夹下的index.html文件</p>

<p>点击<a href="/assets/2014/03/21/html_output_1/index.html">这里</a>查看</p>

<p>可以看到，当Doxygen对没有任何注释的代码，也可以生成对应的文档框架，不过，仅仅是框架而已，没有太大作用。Doxygen针对这种情况，专门设置了一个选项<code>EXTRACT_ALL</code>，默认情况下为<code>NO</code>状态，手工设置为YES后，Doxygen会尽可以的从代码中提取信息，这里我们将Doxyfile中的</p>

<pre><code>EXTRACT_ALL            = NO
</code></pre>

<p>改为</p>

<pre><code>EXTRACT_ALL            = YES
</code></pre>

<p>然后再次编译，前后输出结果，对比如下：</p>

<p><img src="/images/2014/03/21/NakeCodeComp.png" alt="对比结果" /></p>

<p><strong>注：</strong>请点击<a href="/assets/2014/03/21/html_output_2/index.html">这里</a>查看<code>EXTRACT_ALL = YES</code>的输出结果</p>

<p>接下来，我们为代码中增加对应的描述信息</p>

<p>Doxygen制定了一套注释规范，在保证正确输出文档的同时，也兼顾了良好的可读性。对编程人员来说，只需在编写注释的时候，稍微注意格式，即可生成非常优秀的文档，额外增加的工作量可忽略不计。</p>

<p>下面就是某个函数的Doxygen注释</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c1">//&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;em&gt;</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \brief Write one byte to special register</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! This function is to write one byte to LIS302DL register,one byte will be</span>
</span><span class='line'><span class="c1">//! writen in appointed address.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \param RegAddr specifies the target register address.</span>
</span><span class='line'><span class="c1">//! \param Data is the data written to target register.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \return Indicate the status of operation which can be one of the following</span>
</span><span class='line'><span class="c1">//! value \b SUCCESS or  \b FAILURE .</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \note This function is used by internal, user MUST NOT call it in your</span>
</span><span class='line'><span class="c1">//!  Application.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//&lt;/em&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;</span>
</span><span class='line'><span class="k">static</span> <span class="n">Result</span> <span class="n">_I2CRegWriteByte</span><span class="p">(</span><span class="kt">uint8_t</span> <span class="n">RegAddr</span><span class="p">,</span> <span class="kt">uint8_t</span> <span class="n">Data</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">Result</span> <span class="n">retv</span> <span class="o">=</span> <span class="n">SUCCESS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Begin to I2C Transfer</span>
</span><span class='line'><span class="c1">// first send START signal to control I2C bus</span>
</span><span class='line'><span class="c1">// then send 7-bit address and R/W bit to I2C salve</span>
</span><span class='line'><span class="c1">// at last send target register address</span>
</span><span class='line'><span class="n">retv</span> <span class="o">=</span> <span class="n">xI2CMasterWriteS1</span><span class="p">(</span><span class="n">LIS302DL_PIN_I2C_PORT</span><span class="p">,</span> <span class="n">LIS302DL_I2C_ADDR</span><span class="p">,</span>
</span><span class='line'>        <span class="n">RegAddr</span><span class="p">,</span> <span class="n">I2C_TRAN_NOT_END</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">retv</span> <span class="o">!=</span> <span class="n">SUCCESS</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">FAILURE</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// Send the wanted data to I2C bus</span>
</span><span class='line'><span class="c1">// then Send STOP signal to release I2C bus</span>
</span><span class='line'><span class="n">retv</span> <span class="o">=</span> <span class="n">xI2CMasterWriteS2</span><span class="p">(</span><span class="n">LIS302DL_PIN_I2C_PORT</span><span class="p">,</span> <span class="n">Data</span><span class="p">,</span> <span class="n">I2C_TRAN_END</span><span class="p">);</span>
</span><span class='line'><span class="k">if</span><span class="p">(</span><span class="n">retv</span> <span class="o">!=</span> <span class="n">SUCCESS</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="p">(</span><span class="n">FAILURE</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span><span class="p">(</span><span class="n">SUCCESS</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我们可以看到，程序代码可读性非常好，即便没有生成单独的文档，任何具有一定英文基础的同学都可以
轻松的了解到函数的用法和入口参数，注意事项等信息。</p>

<p>接下来，我们采用Doxygen语法为main.c dev.c dev.h添加注释信息，完成后的效果如下所示：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (main.c)</span> <a href='/downloads/code/2014/03/21/FinalSourceCode/main.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \file main.c </span>
</span><span class='line'><span class="c1">//! This is an simple example show developer how to use dev api to print int number.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \author    Cedar</span>
</span><span class='line'><span class="c1">//! \version   V1.0</span>
</span><span class='line'><span class="c1">//! \date      2014-03-23</span>
</span><span class='line'><span class="c1">//! \copyright GNU Public License V3.0</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &quot;dev.h&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define CNT_MAX  10  </span><span class="c1">//!&lt; The maxium number of print</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//! Simple device example.</span>
</span><span class='line'><span class="kt">void</span> <span class="nf">DEV_Example</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">Dev_Init</span><span class="p">();</span>
</span><span class='line'>	
</span><span class='line'>	<span class="k">for</span> <span class="p">(</span><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">CNT_MAX</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
</span><span class='line'>	<span class="p">{</span>
</span><span class='line'>		<span class="n">Dev_PrintInt</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
</span><span class='line'>	<span class="p">}</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">Dev_Close</span><span class="p">();</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//! Application Entry</span>
</span><span class='line'><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>	<span class="n">DEV_Example</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dev.c)</span> <a href='/downloads/code/2014/03/21/FinalSourceCode/dev.c'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \file dev.c </span>
</span><span class='line'><span class="c1">//! the implement of simple device.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \author    Cedar</span>
</span><span class='line'><span class="c1">//! \version   V1.0</span>
</span><span class='line'><span class="c1">//! \date      2014-03-23</span>
</span><span class='line'><span class="c1">//! \copyright GNU Public License V3.0</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//! Simple device status.</span>
</span><span class='line'><span class="c1">//! </span>
</span><span class='line'><span class="c1">//! \warning This variable is designed for internal, user \b MUST \b NOT call it.</span>
</span><span class='line'><span class="k">static</span> <span class="kt">int</span> <span class="n">__DevStatus</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Dev_Init</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="c1">// Print debug information</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Dev Initialize OK!</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">Dev_PrintInt</span><span class="p">(</span><span class="kt">int</span> <span class="n">number</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Print IntType number: %d</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">int</span> <span class="n">Dev_StatusCheck</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="k">return</span> 	<span class="p">(</span><span class="n">__DevStatus</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="n">Dev_Close</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="n">printf</span><span class="p">(</span><span class="s">&quot;Dev Close OK!</span><span class="se">\r\n</span><span class="s">&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span> (dev.h)</span> <a href='/downloads/code/2014/03/21/FinalSourceCode/dev.h'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
</pre></td><td class='code'><pre><code class='c'><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \file dev.h</span>
</span><span class='line'><span class="c1">//!  Simple device user API.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \author    Cedar</span>
</span><span class='line'><span class="c1">//! \version   V1.0</span>
</span><span class='line'><span class="c1">//! \date      2014-03-23</span>
</span><span class='line'><span class="c1">//! \copyright GNU Public License V3.0</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;stdio.h&gt;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \addtogroup Dev_Status  Simple device status information.</span>
</span><span class='line'><span class="c1">//! @{</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#define DEV_ON      ((int)(1))      </span><span class="c1">//!&lt; Simple device is power on.</span>
</span><span class='line'><span class="cp">#define DEV_OFF     ((int)(0))      </span><span class="c1">//!&lt; Simple device is power off.</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! @}</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \addtogroup Dev_API  Simple device APIs list.</span>
</span><span class='line'><span class="c1">//! @{</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \brief  Initialize simple device.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \param  none.</span>
</span><span class='line'><span class="c1">//! \retval none.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \note   This function \b MUST be called first before others function.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">void</span> <span class="nf">Dev_Init</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \brief  Print Int number to terimal device.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \param  [in] number is the data you want to print.</span>
</span><span class='line'><span class="c1">//! \retval the number of print information, in bytes. return zero indicate print error !.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \note</span>
</span><span class='line'><span class="c1">//! * Be sure you have called \ref Dev_Init function before call this fuction.</span>
</span><span class='line'><span class="c1">//! * Remember to check return value.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="nf">Dev_PrintInt</span><span class="p">(</span><span class="kt">int</span> <span class="n">number</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \brief  Check simple device status information.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \param  none.</span>
</span><span class='line'><span class="c1">//! \retval status information of simple device, which can be one of the following value:\n</span>
</span><span class='line'><span class="c1">//!  - \ref DEV_ON</span>
</span><span class='line'><span class="c1">//!  - \ref DEV_OFF</span>
</span><span class='line'><span class="c1">//!  \n More information, please reference \ref Dev_Status.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">int</span> <span class="nf">Dev_StatusCheck</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \brief  Close simple device.</span>
</span><span class='line'><span class="c1">//!</span>
</span><span class='line'><span class="c1">//! \param  none.</span>
</span><span class='line'><span class="c1">//! \retval none.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="k">extern</span> <span class="kt">void</span> <span class="nf">Dev_Close</span><span class="p">(</span><span class="kt">void</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! @}</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//! \example main.c</span>
</span><span class='line'><span class="c1">//!  Show how to use simple device to print int number.</span>
</span><span class='line'><span class="c1">//</span>
</span><span class='line'><span class="c1">//***************************************************************************************</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>用Doxygen编译后，生成的HTML文档如下所示：</p>

<p><img src="/images/2014/03/21/Doxygen_Final_Demo.jpg" alt="最终效果" /></p>

<p><strong>注：</strong>请点击<a href="/assets/2014/03/21/html_output_final/index.html">这里</a>查看详细的输出文档。</p>

<p>【待续】</p>

<h2>总结</h2>

<p>【占位符，留空】</p>

<h2>深入学习</h2>

<p>【占位符，留空】</p>

<h2>参考资料</h2>

<ol>
<li><p><a href="http://www.stack.nl/~dimitri/doxygen/index.html">Doxygen官网</a></p></li>
<li><p><a href="http://www.stack.nl/~dimitri/doxygen/manual/commands.html">Doxygen支持的命令</a></p></li>
<li><p><a href="http://www.ibm.com/developerworks/cn/aix/library/au-learningdoxygen/">IBM &ndash; 学习用doxygen生成源码文档</a></p></li>
</ol>

]]></content>
  </entry>
  
</feed>
